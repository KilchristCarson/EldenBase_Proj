/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package eldenringproj;

import bo.NewGame;
import dao.NewGameHandler;
import java.util.Iterator;
import java.util.List;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import utils.SQLUtil;
/**
 *
 * @author kilch
 */
public class EditNewGame extends javax.swing.JFrame {
    
    List<NewGame> NewGameL;
    
    private void populateData(String keyword) {
        String[] colNames = new String[]{"New Game ID", "Gold Multiplier","Enemy Strength Multiplier"};
        DefaultTableModel tm = new DefaultTableModel(colNames, 0) {
            @Override
            public boolean isCellEditable(int i, int i1) {
                return false;
            }
        };
        NewGameL = new NewGameHandler().getNewGame(keyword);
        NewGameL.forEach((s) -> {
            tm.addRow(s.getRow());
        });
        tblNewGame.setModel(tm);
    }
    /**

    /**
     * Creates new form EditNewGame
     */
    public EditNewGame() {
        initComponents();
        populateData("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        ngAddBttn = new javax.swing.JButton();
        ngUpdateBttn = new javax.swing.JButton();
        ngDeleteBttn = new javax.swing.JButton();
        ngMenuBttn = new javax.swing.JButton();
        txtNewGameID = new javax.swing.JTextField();
        txtGoldMult = new javax.swing.JTextField();
        txtEnemyStrMult = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblNewGame = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));

        jLabel1.setFont(new java.awt.Font("Gabriola", 0, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(213, 174, 88));
        jLabel1.setText("Edit New Game");

        jLabel2.setFont(new java.awt.Font("Gabriola", 3, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(213, 174, 88));
        jLabel2.setText("New Game ID: ");

        jLabel3.setFont(new java.awt.Font("Gabriola", 3, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(213, 174, 88));
        jLabel3.setText("Gold Multiplier: ");

        jLabel4.setFont(new java.awt.Font("Gabriola", 3, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(213, 174, 88));
        jLabel4.setText("Enemy Strength Multiplier: ");

        ngAddBttn.setBackground(new java.awt.Color(213, 174, 88));
        ngAddBttn.setFont(new java.awt.Font("Gabriola", 0, 14)); // NOI18N
        ngAddBttn.setText("Add New Game");
        ngAddBttn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ngAddBttnActionPerformed(evt);
            }
        });

        ngUpdateBttn.setBackground(new java.awt.Color(213, 174, 88));
        ngUpdateBttn.setFont(new java.awt.Font("Gabriola", 0, 14)); // NOI18N
        ngUpdateBttn.setText("Update Data");
        ngUpdateBttn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ngUpdateBttnActionPerformed(evt);
            }
        });

        ngDeleteBttn.setBackground(new java.awt.Color(213, 174, 88));
        ngDeleteBttn.setFont(new java.awt.Font("Gabriola", 0, 14)); // NOI18N
        ngDeleteBttn.setText("Delete Data");
        ngDeleteBttn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ngDeleteBttnActionPerformed(evt);
            }
        });

        ngMenuBttn.setBackground(new java.awt.Color(213, 174, 88));
        ngMenuBttn.setFont(new java.awt.Font("Gabriola", 0, 14)); // NOI18N
        ngMenuBttn.setText("Menu");
        ngMenuBttn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ngMenuBttnActionPerformed(evt);
            }
        });

        txtNewGameID.setBackground(new java.awt.Color(213, 174, 88));
        txtNewGameID.setFont(new java.awt.Font("Gabriola", 0, 18)); // NOI18N

        txtGoldMult.setBackground(new java.awt.Color(213, 174, 88));
        txtGoldMult.setFont(new java.awt.Font("Gabriola", 0, 18)); // NOI18N

        txtEnemyStrMult.setBackground(new java.awt.Color(213, 174, 88));
        txtEnemyStrMult.setFont(new java.awt.Font("Gabriola", 0, 18)); // NOI18N

        tblNewGame.setBackground(new java.awt.Color(0, 0, 0));
        tblNewGame.setFont(new java.awt.Font("Gabriola", 0, 18)); // NOI18N
        tblNewGame.setForeground(new java.awt.Color(213, 174, 88));
        tblNewGame.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblNewGame.setRowHeight(30);
        tblNewGame.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblNewGameMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblNewGame);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(151, 151, 151)
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtNewGameID))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtGoldMult))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtEnemyStrMult))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 481, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ngMenuBttn, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(ngUpdateBttn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ngDeleteBttn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ngAddBttn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNewGameID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtGoldMult, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtEnemyStrMult, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(ngAddBttn)
                        .addGap(18, 18, 18)
                        .addComponent(ngUpdateBttn)
                        .addGap(18, 18, 18)
                        .addComponent(ngDeleteBttn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 81, Short.MAX_VALUE)
                        .addComponent(ngMenuBttn))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 599, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 501, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ngMenuBttnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ngMenuBttnActionPerformed
        this.setVisible(false);
        new EldenRingProj().setVisible(true);
    }//GEN-LAST:event_ngMenuBttnActionPerformed

    private void ngDeleteBttnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ngDeleteBttnActionPerformed
        NewGameHandler NGHand = new NewGameHandler();
        
        String NewGameID = txtNewGameID.getText();
        
        int newGameID = Integer.parseInt(NewGameID);
        int result = NGHand.deleteNewGame(newGameID);
                
        if (result>0) {
            JOptionPane.showMessageDialog(this, "New Game deleted successfully.");
            refreshNewGameTable();}
        else{
            JOptionPane.showMessageDialog(this, "New Game deletion failed.");     
                    }

    }//GEN-LAST:event_ngDeleteBttnActionPerformed

    private void ngUpdateBttnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ngUpdateBttnActionPerformed
// Create an instance of the NewGameHandler class
NewGameHandler NGHand = new NewGameHandler();

// Get values from text fields for new game ID, gold multiplier, and enemy strength multiplier
String NewGameID = txtNewGameID.getText();
String GoldMult = txtGoldMult.getText();
String EnemyStrMult = txtEnemyStrMult.getText();

try {
    // Convert new game ID to an integer, gold multiplier and enemy strength multiplier to floats
    int IntNewGameID = Integer.parseInt(NewGameID);
    float goldMult = Float.parseFloat(GoldMult);
    float enemyStrMult = Float.parseFloat(EnemyStrMult);

    // Call the updateNewGame method to update new game information
    int result = NGHand.updateNewGame(IntNewGameID, IntNewGameID, goldMult, enemyStrMult);

    // Check if the new game was updated successfully
    if (result > 0) {
        // If successful, refresh the new game table and show a success message
        refreshNewGameTable();
        JOptionPane.showMessageDialog(this, "Updated");
    } else {
        // If update failed, show a failure message
        JOptionPane.showMessageDialog(this, "Update Failed!");
    }
} catch (NumberFormatException e) {
    // Handle the exception for invalid input
    e.printStackTrace();
}


    }//GEN-LAST:event_ngUpdateBttnActionPerformed

    private void tblNewGameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblNewGameMouseClicked
        int selectedRow = tblNewGame.getSelectedRow();
        if (selectedRow != -1) {
                    // Get values from the selected row
                    Object NGIDValue = tblNewGame.getValueAt(selectedRow, 0);
                    Object GoldMultValue = tblNewGame.getValueAt(selectedRow, 1);
                    Object EnemyStrMultValue = tblNewGame.getValueAt(selectedRow, 2);

                    // Set text fields with the retrieved values
                    txtNewGameID.setText(String.valueOf(NGIDValue));
                    txtGoldMult.setText(String.valueOf(GoldMultValue));
                    txtEnemyStrMult.setText(String.valueOf(EnemyStrMultValue));
                }

    }//GEN-LAST:event_tblNewGameMouseClicked

    private void ngAddBttnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ngAddBttnActionPerformed
        // Create instances
    NewGameHandler NGHand = new NewGameHandler();
    EditInventory EI = new EditInventory();

// Get values from text fields
    String NewGameID = txtNewGameID.getText();
    String GoldMult = txtGoldMult.getText();
    String EnemyStrMult = txtEnemyStrMult.getText();

try {
    // Convert ArmorID and NewDefenceStat to integers
    int newGameID = Integer.parseInt(NewGameID);
    float goldMult = Float.parseFloat(GoldMult);
    float enemyStrMult = Float.parseFloat(EnemyStrMult);
    

    // Call the updateArmor method
    int result = NGHand.addNewGame(newGameID, goldMult, enemyStrMult);

    // Check the result if necessary
    if (result > 0) {
        // Armor updated successfully
        refreshNewGameTable();
        JOptionPane.showMessageDialog(this, "Updated");
    } else {
        JOptionPane.showMessageDialog(this, "Update Failed");
        // Failed to update armor
    }
} catch (NumberFormatException e) {
    // Handle the exception for invalid integer input
    e.printStackTrace();
}
    }//GEN-LAST:event_ngAddBttnActionPerformed
    public void refreshNewGameTable(){
        populateData("");
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton ngAddBttn;
    private javax.swing.JButton ngDeleteBttn;
    private javax.swing.JButton ngMenuBttn;
    private javax.swing.JButton ngUpdateBttn;
    private javax.swing.JTable tblNewGame;
    private javax.swing.JTextField txtEnemyStrMult;
    private javax.swing.JTextField txtGoldMult;
    private javax.swing.JTextField txtNewGameID;
    // End of variables declaration//GEN-END:variables
}
